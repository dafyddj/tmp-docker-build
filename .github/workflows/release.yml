name: Build & Release

on:
  workflow_call:
    inputs:
      docker-registry:
        type: string
        default: ghcr.io
      image-namespace:
        required: true
        type: string
      image-repo:
        required: true
        type: string
      registry-username:
        type: string
        default: ${{ github.repository_owner }}
      release:
        type: boolean
        default: true
      tag:
        type: string
        default: latest
    secrets:
      registry-password:
        required: true

jobs:
  build:
    name: Build & Release
#    permissions:
#      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Debug on runner (When re-run with "Enable debug logging" checked)
        if: runner.debug
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ghcr.io/dafyddj/tmp-docker-build
          labels: |
            org.opencontainers.image.authors=Dafydd Jones <dafydd@techneg.it>
      - name: Log in to registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ inputs.docker-registry }}
          username: ${{ inputs.registry-username }}
          password: ${{ secrets.registry-password }}
      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.release == true }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
